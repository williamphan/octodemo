name: Node CI

on: [pull_request]
env:
  NODE_VERSION: 12.x

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      run: |
        npm ci
        npm run build --if-present
        npm test
      env:
        CI: true
    - name: Run linter
      run: |
        npm install eslint --save-dev
        ./node_modules/.bin/eslint --no-eslintrc .
    - uses: octokit/request-action@v1.x
      id : create_deployment
      with:
        route: POST /repos/:owner/:repo/deployments
        ref: ${{ github.event.pull_request.head.ref }}
        required_contexts: "[]"
        environment: "review"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: gr2m/get-json-paths-action@v1.x
      id: parse_deployment
      with:
        json: ${{ steps.create_deployment.outputs.data }}
        id: "id"
    - name: Deploy to Zeit
      uses: amondnet/now-deployment@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        zeit-token: ${{ secrets.ZEIT_TOKEN }}
    - uses: octokit/request-action@v1.x
      with:
        route: POST /repos/:owner/:repo/deployments/:deployment_id/statuses
        deployment_id: ${{ steps.parse_deployment.outputs.id }}
        environment: "review"
        state: "success"
        target_url: ${{ steps.zeit_deployment.outputs.preview-url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: octokit/request-action@v1.x
      if: failure()
      with:
        route: POST /repos/:owner/:repo/deployments/:deployment_id/statuses
        deployment_id: ${{ steps.parse_deployment.outputs.id }}
        environment: "review"
        state: "failure"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
